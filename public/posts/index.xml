<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>https://hxie13.github.io/public/posts/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; BSD license</copyright>
    <lastBuildDate>Mon, 14 Feb 2022 20:46:30 +0800</lastBuildDate><atom:link href="https://hxie13.github.io/public/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Modern Operating Systems, Fourth Edition</title>
      <link>https://hxie13.github.io/public/posts/os/</link>
      <pubDate>Mon, 14 Feb 2022 20:46:30 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/os/</guid>
      <description>1. 绪论 计算机为管理物理部件并加以优化使用而安装的一层软件，称为操作系统.
  用户态 浏览器 音乐播放器 电子邮件 软件   用户接口程序   内核态 操作系统     硬件    用户接口程序包括：shell(基于文本)、GUI(基于图形用户界面). 计算机有两种运行模式：内核态和用户态，软件中最基础的部分是操作系统，其运行在内核态，可以执行任何机器指令，对所有硬件拥有完全访问权；用户态下的软件仅使用了机器指令中的一个子集，无法使用那些会影响机器控制或可进行I/O操作的指令. 但在一些系统中，用户态下运行的程序会协助操作系统完成特权功能，但该程序不是操作系统的一部分，也不在内核态下运行. Linux参考UNIX模式编写，但具有全新的代码基础.  1.1 操作系统的功能 操作系统是运行在内核态的软件，有两个基本上独立的任务，为程序员提供一个资源集的清晰抽象，并管理这些硬件资源。
1.1.1 作为扩展机器的操作系统 一种自顶向下的观点，操作系统是向应用程序提供基本抽象的概念.
 硬盘驱动：实现软件与硬件的交互，提供读写硬盘块的接口. 抽象：将任务划分为两部分，有关抽象的定义和实现；随时用这些抽象解决问题. 通过操作系统，隐藏硬件，对外呈现出良好、清晰、优雅、一致的接口.  1.1.2 作为资源管理者的操作系统 一种自底向上的观点，操作系统管理着一个复杂系统的各个部分，其任务在于在相互竞争的程序之间有序控制对处理器、存储器以及其它I/O接口设备的分配.
 例如：多个应用程序试图在同一台打印机上输出计算结果，使用磁盘上缓存区的方法，操作系统接受多个程序的输出，在一个程序输出结束后，有序打印暂存于缓存区的文件.  当一个计算机有多个用户时，管理和保护存储器、I/O接口设备以及其它资源的需求变得强烈起来，因为用户间可能会相互干扰。在这个角度出发看待操作系统，其任务就是记录哪个程序在使用什么资源，对资源请求进行分配，评估使用代价，并且为不同程序和用户调节相互冲突的资源请求.
  资源管理的方式：时间和空间上的多路复用(共享)资源机制. 时间上的复用(打印机及CPU等资源的使用). 空间上的复用(在若干个运行程序之间分割内存，特别是当一个程序只需要整个内存的一小部分时;磁盘为不同用户保存文件).  </description>
    </item>
    
    <item>
      <title>TutorialHugo</title>
      <link>https://hxie13.github.io/public/posts/tutorialhugo/</link>
      <pubDate>Mon, 14 Feb 2022 10:24:26 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/tutorialhugo/</guid>
      <description>目录功能介绍 Archetypes 目录 静态源码文件以section组织，每个section使用相应同名的archetypes，以.md内容自动响应填充meta data. 例如hugo new posts\demo.md，hugo会按以下顺序在archetypes目录下搜索posts.md文件，寻找到哪个文件则使用哪个文件内容作为模板.
 archetypes\posts.md archetypes\default.md themes\themename\archetypes\posts.md themes\themename\archetypes\default.md  Public 目录 静态网页的输出目录</description>
    </item>
    
    <item>
      <title>TCP</title>
      <link>https://hxie13.github.io/public/posts/tcp/</link>
      <pubDate>Sun, 13 Feb 2022 15:53:17 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/tcp/</guid>
      <description>I like yummi vegetarian food .</description>
    </item>
    
    <item>
      <title>GitLearn</title>
      <link>https://hxie13.github.io/public/posts/gitlearn/</link>
      <pubDate>Sun, 13 Feb 2022 13:30:44 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/gitlearn/</guid>
      <description>记录Git本地及远程操作和同步命令的使用.</description>
    </item>
    
  </channel>
</rss>
