<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>译码为梦</title>
    <link>https://hxie13.github.io/public/</link>
    <description>Recent content on 译码为梦</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; BSD license</copyright>
    <lastBuildDate>Tue, 15 Mar 2022 14:42:37 +0800</lastBuildDate><atom:link href="https://hxie13.github.io/public/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Review</title>
      <link>https://hxie13.github.io/public/posts/review/</link>
      <pubDate>Tue, 15 Mar 2022 14:42:37 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/review/</guid>
      <description>   Received Revised Accepted Online     210712 220210 220308 220314   210917 220228 220310 220315   211222 220304 220310 220315   211223  220308 220314   211013  220307 220312   211122 20305 220309 220312   210707 220120 220307 220312   211204  220228 220309   210601 211209 211231 22119   210611 211228 211231 220106   210627 211220 220107 220113   210916 220105 220109 220117   210812 220107 220110 220115   210814 211227 220118 220125   210928 211128 220120 220209   210719 220106 220114 220122   210817 220112 220118 220125     </description>
    </item>
    
    <item>
      <title>DailyPaper_EOArray</title>
      <link>https://hxie13.github.io/public/posts/dailypaper_eoarray/</link>
      <pubDate>Fri, 11 Mar 2022 10:11:28 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/dailypaper_eoarray/</guid>
      <description>关于长春观测站地面光电设备情况及数据获取工作的介绍  自2017年4月运行， 光电阵列包含8架小型望远镜，每架口径$15 cm$，焦距$15 cm$，CCD相机像素$3 K \times 3 K$，视场$14^{\circ} \times 14^{\circ}$，像素分辨率$16^{&#39;&#39;}$；每晚可获取超过3到4千LEI的极短弧观测，$85%$观测弧段可关联至NORAD编目库。 使用基于距离搜索的方式对VSAs数据进行IOD定轨，使用几何方法对IOD结果进行关联，IOD平均成功率在$91%$左右，真阳率超过$86%$。 IOD方法与Gauss,Laplace,Gooding, 和 Double-r方法进行对比，关联方法与CBTA方法对比。  应用背景
 空间碰撞预警与避让 碎片清除依赖于准确的编目 小目标的发现,定轨和量化(characterization)对SSA意义重大 截至20180104，NORAD编目库中对象超过18835，其中LEO对象多为超过10cm的目标，多由雷达跟踪数据维护；但尺寸在1厘米级的对象数量超过750000，有必要进行厘米级对象的编目任务，这需要地基或天基传感器能检测到足够小的目标。  现有方案
 LEO大口径光学轨道星座  避免地基设备仅在傍晚/晴朗天气状况工作的限制 巡天模式(Survey Mode)下，LEO目标在光学视场中途经间隔(pass duration)很短，导致VSAs(tracklets):each of which is a set of angular observations over a short period of time.    文章工作
 对夜晚收集VSAs处理，初定轨+编目关联，VSAs平均弧长在36s左右. 对UCTs的VSAs数据处理进行的初定轨误差较大，因为range/range rate信息未知或是基本不受约束(largely unconstrained)，需要进行多tracklets关联从而二次precise orbit determination. Too-short arc(TSA) problem：IOD结果误差较大，造成多tracklets关联以及后续精定轨困难，称之为TSA.  IOD相关工作
 传统方法在处理VSA角度观测时可能会失败，由于观测噪声在极短弧长内对定轨结果干扰很大。 Range search method：对两个时刻斜距进行假设，已知两个时刻目标位置及其对应的时间来确定轨道，称为Lambert问题，桑吉章等人2017年处理地基真实，天基仿真VSA数据时取得超过$90%$的成功率。  关联编目相关工作
 基于协方差的轨迹关联方法，需要有输入IOD结果的协方差信息； 桑吉章等人提出几何法用于IOD tracks关联，无需协方差信息；  望远镜相关信息</description>
    </item>
    
    <item>
      <title>LibForSCI</title>
      <link>https://hxie13.github.io/public/posts/libforsci/</link>
      <pubDate>Sat, 05 Mar 2022 21:53:17 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/libforsci/</guid>
      <description>微分方程求解 打靶法  博客  B站视频   配点法  博客   </description>
    </item>
    
    <item>
      <title>Picard配点迭代法</title>
      <link>https://hxie13.github.io/public/posts/picard%E9%85%8D%E7%82%B9%E8%BF%AD%E4%BB%A3%E6%B3%95/</link>
      <pubDate>Sat, 05 Mar 2022 21:04:06 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/picard%E9%85%8D%E7%82%B9%E8%BF%AD%E4%BB%A3%E6%B3%95/</guid>
      <description>轨道递推(传播)和转移方法发展路线 数值方法  变步长高阶龙格库塔方法 Gauss-Jackson方法 打靶法：将两点BVP转化为多个IVP问题；对初始估计较敏感，收敛区间较小； 有限差分法：需要构建大规模代数矩阵方程； 多步打靶法：将大的时间区间分割为多个子区间，得到多个BVP问题，引入额外的约束条件来保证各子区间之间解的连续性； 修正打靶法 配点法：待求解方程被转化为非线性代数方程组，然后适用Newton-Raphson或Picard迭代法进行求解。  </description>
    </item>
    
    <item>
      <title>DailyPaper_constraintAR</title>
      <link>https://hxie13.github.io/public/posts/dailypaper_constraintar/</link>
      <pubDate>Sat, 05 Mar 2022 14:36:39 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/dailypaper_constraintar/</guid>
      <description>Single/Multiple revolution lambert problem constraints for optical track to track association 目的 解决多圈的track-to-track association问题，在单圈T2TA问题中，单圈BVP-Con和BVP-Opt方法被提出，文章将该方法框架泛化，建立通用的工作流程。
应用背景 光学观测中，观测者与目标间的斜距无法测量，对同一目标的两段观测数据关联无法通过直接的轨道信息比较完成；常结合初始轨道确定(IOD)算法获取目标初步轨道(不确定性较大)。
技术背景   Constrained Admissible Region(CAR)
仅角度观测下，引入约束限制距离假设对的范围，结合BVP问题自然转变为优化问题(以两个epoch的距离为参数)。但该方法仅适用于单圈Lambert问题。
  Preprocess of optical image
可以从图像中获取短序列的角度测量，角度测量的一个短弧数据被称为一个tracklet，此外，可以依靠Maruskin 所提角运动模型估计角速度.
  CAR分类
$\rho-\dot{\rho}$ 平面类型和$\rho-\rho$平面类型，前者依赖一个时刻属性向量$(\alpha_1,\beta_1,\dot{\alpha_1},\dot{\beta_1})^T$信息建立，求解IVP问题；后者依赖两个时刻角信息$(\alpha_1,\beta_1,\alpha_2,\beta_2)^T$，也即LOS向量，求解BVP问题
  </description>
    </item>
    
    <item>
      <title>TimeLine</title>
      <link>https://hxie13.github.io/public/posts/timeline/</link>
      <pubDate>Fri, 25 Feb 2022 19:36:11 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/timeline/</guid>
      <description>各公司招聘deadline信息汇总    单位 岗位类型 截止时间 面向对象     字节跳动 暑期实习 4.30之前 23年8月之前   蔚来 春季补招     TPLINK  3.31 22年12月31日之前   易方达基金 暑期实习 3.31 23年8月之前   宁德时代 计算岗专项 2.18起投 22年12月之前   Oppo 春季招聘 4月截止 22届博士   海康威视 春季招聘 4.15截止 博士   华为中央软件院 中央软件院  22年12月31日之前    </description>
    </item>
    
    <item>
      <title>软件工具的使用手册</title>
      <link>https://hxie13.github.io/public/posts/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</link>
      <pubDate>Wed, 23 Feb 2022 15:07:55 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8%E6%89%8B%E5%86%8C/</guid>
      <description>VSCODE常用路径(文件)变量  ${workspaceFolder}，当前工程文件夹路径 ${workspaceFolderBasename}，当前工程文件夹名称 ${file}，包含绝对路径的文件名 ${relativeFileDirname}，相对于当前工程文件夹的路径名 ${relativeFile}，包含相对路径的文件名 ${fileDirname}，当前打开文件的路径名(绝对路径)  CMAKE常用命令及变量 </description>
    </item>
    
    <item>
      <title>面试经验</title>
      <link>https://hxie13.github.io/public/posts/expinterview/</link>
      <pubDate>Tue, 15 Feb 2022 14:32:03 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/expinterview/</guid>
      <description>知识点归纳 LeetCode   LC.61 ：给定一个单链表，输出该链表右移k位的新链表
  LC.215 ：给定一个数组，输出数组里第k大的数字
  用两个栈(Stack)实现一个队列(Queue)的入队(Enqueue)与出队(Dequeue)方法. 解析   基础知识 C++  静态链接和动态链接  static作用  大端字节序和小段字节序 c++之多态性  const和#define c++模板在汇编阶段还是运行阶段 数组和链表的区别 智能指针的底层实现   计算机网络  三次握手，四次挥手  为什么要三次握手，两次不行吗？  防止因失效的连接请求报文而出现重复连接，举个例子，若初次发出的请求连接报文因为网络拥堵而迟迟未到达接收端，如此客户端便不会接受到ACK报文，可能认定服务器未收到SYN报文，于是再发送一条请求连接报文，此次连接顺利建立，传输数据，最后关闭连接；若是两次握手，当初次的请求连接报文到达服务端时，服务端进入ESTABLISHED状态，返回确认应答给客户端，客户端也进入ESTABLISHED状态，连接被重复建立，造成网络资源浪费，而三次握手规则下，当客户端收到重复确认应答后，识别出该应答为历史应答，便不会进入ESTABLISHED状态了，同样也不会建立新的连接了，接着通过发送RST报文通知服务端终止连接.     TCP/IP头部 HTTP、HTTPS加密原理 以及HTTP完整的传输过程  子网掩码 浏览器输入URL后发生了什么  域名解析-&amp;gt;IP地址  浏览器解析该域名，首先查看本地hosts文件，看其中有没有请求域名所对应的IP地址缓存，若有则直接使用hosts文件中的IP地址； 若hosts文件中未寻找到对应IP地址，浏览器向本地DNS服务器(ISP，例如中国电信)发起域名-&amp;gt;IP地址的递归查询请求，若本地DNS服务器无该缓存，转向DNS根服务器进行查询； 根DNS服务器未记录具体域名和IP地址的对应关系，而是返回给本地DNS服务器查询地址对应的域名服务器地址，该过程是迭代的过程； 本地DNS继续向域名服务器(.com)发出请求，但域名服务器同样未记录具体域名和IP地址的对应关系，但会返回给本地DNS服务器查询地址对应的域名解析服务器地址； 最后，本地DNS服务器向域名解析服务器发出请求，收到一个域名与IP地址的对应关系，本地DNS服务器在将IP地址返回给用户电脑的同时，将该对应关系缓存起来以备其它用户查询，加快网络访问.   建立TCP连接(向web服务器80端口发起TCP连接请求)； 浏览器向web服务器发起http请求； 服务器端处理，返回http响应； 关闭TCP连接 浏览器解析资源，布局渲染.    数据库  查找表student中分数在90-100之间的学生信息  操作系统  进程、线程的特点 线程同步 锁 如何实现共享内存  </description>
    </item>
    
    <item>
      <title>Modern Operating Systems, Fourth Edition</title>
      <link>https://hxie13.github.io/public/posts/os/</link>
      <pubDate>Mon, 14 Feb 2022 20:46:30 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/os/</guid>
      <description>1. 绪论 计算机为管理物理部件并加以优化使用而安装的一层软件，称为操作系统.
  用户态 浏览器 音乐播放器 电子邮件 软件   用户接口程序   内核态 操作系统     硬件    用户接口程序包括：shell(基于文本)、GUI(基于图形用户界面). 计算机有两种运行模式：内核态和用户态，软件中最基础的部分是操作系统，其运行在内核态，可以执行任何机器指令，对所有硬件拥有完全访问权；用户态下的软件仅使用了机器指令中的一个子集，无法使用那些会影响机器控制或可进行I/O操作的指令. 但在一些系统中，用户态下运行的程序会协助操作系统完成特权功能，但该程序不是操作系统的一部分，也不在内核态下运行. Linux参考UNIX模式编写，但具有全新的代码基础.  1.1 操作系统的功能 操作系统是运行在内核态的软件，有两个基本上独立的任务，为程序员提供一个资源集的清晰抽象，并管理这些硬件资源。
1.1.1 作为扩展机器的操作系统 一种自顶向下的观点，操作系统是向应用程序提供基本抽象的概念.
 硬盘驱动：实现软件与硬件的交互，提供读写硬盘块的接口. 抽象：将任务划分为两部分，有关抽象的定义和实现；随时用这些抽象解决问题. 通过操作系统，隐藏硬件，对外呈现出良好、清晰、优雅、一致的接口.  1.1.2 作为资源管理者的操作系统 一种自底向上的观点，操作系统管理着一个复杂系统的各个部分，其任务在于在相互竞争的程序之间有序控制对处理器、存储器以及其它I/O接口设备的分配.
 例如：多个应用程序试图在同一台打印机上输出计算结果，使用磁盘上缓存区的方法，操作系统接受多个程序的输出，在一个程序输出结束后，有序打印暂存于缓存区的文件.  当一个计算机有多个用户时，管理和保护存储器、I/O接口设备以及其它资源的需求变得强烈起来，因为用户间可能会相互干扰。在这个角度出发看待操作系统，其任务就是记录哪个程序在使用什么资源，对资源请求进行分配，评估使用代价，并且为不同程序和用户调节相互冲突的资源请求.
  资源管理的方式：时间和空间上的多路复用(共享)资源机制. 时间上的复用(打印机及CPU等资源的使用). 空间上的复用(在若干个运行程序之间分割内存，特别是当一个程序只需要整个内存的一小部分时;磁盘为不同用户保存文件).  几个重要概念
 批处理系统 多道程序设计 分时系统 IEEE提出一个UNIX标准，称为POSIX，凡是UNIX必须支持的小型系统调用接口.  1.3 计算机硬件  处理器：CPU从内存中取出指令并执行，顺序是，取指，解码，执行.  每个CPU都有一套可执行的专门指令集，x86处理器不能执行ARM程序。由于访问内存以得到指令或数据的时间比执行指令花费时间更长，CPU内部有一些保存关键变量和临时数据的寄存器.
 除了保存变量和临时结果的通用寄存器外，还有一些对程序员可见的专用寄存器，例如，
 程序计数器，用以保存将要取出的下一条指令的内存地址，在指令取出后被更新以指向后继的指令.</description>
    </item>
    
    <item>
      <title>TutorialHugo</title>
      <link>https://hxie13.github.io/public/posts/tutorialhugo/</link>
      <pubDate>Mon, 14 Feb 2022 10:24:26 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/tutorialhugo/</guid>
      <description>目录功能介绍 Archetypes 目录 静态源码文件以section组织，每个section使用相应同名的archetypes，以.md内容自动响应填充meta data. 例如hugo new posts\demo.md，hugo会按以下顺序在archetypes目录下搜索posts.md文件，寻找到哪个文件则使用哪个文件内容作为模板.
 archetypes\posts.md archetypes\default.md themes\themename\archetypes\posts.md themes\themename\archetypes\default.md  Public 目录 静态网页的输出目录</description>
    </item>
    
    <item>
      <title>TCP</title>
      <link>https://hxie13.github.io/public/posts/tcp/</link>
      <pubDate>Sun, 13 Feb 2022 15:53:17 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/tcp/</guid>
      <description>TCP/IP协议族 TCP四层网络结构  数据链路层，实现网卡接口的网络驱动程序.(ARP与RARP协议) 网络层，实现源端与接收端中间结点(路由器)的选择，以确定主机间路径.(IP协议)  网络层另一重要协议是ICMP协议，主要用于检测网络连接.   传输层，提供两台主机上端到端的通信.(TCP协议、UDP协议、SCTP流控制传输协议) 应用层，负责处理应用程序的逻辑.(telnet、OSPF开放最短路径优先、DNS协议)  封装  数据经TCP封装后，称为TCP报文段(TCP头部信息+TCP内核缓冲区). 经UDP封装后的数据称为UDP数据报,不为应用层数据保存副本. 经IP封装后的数据称为IP数据报，包含头部信息和数据部分(可能为TCP报文段、UDP数据报、ICMP报文). 经数据链路层封装的数据称为帧(frame).帧的最大传输单元(MTU)受网络类型的限制，过长的IP数据报可能需要分片传输. 帧与传输网络类型相关，有以太网帧、令牌环帧.  分用 帧到达目的主机时，将沿协议栈自底向上依次传递. IP协议、ARP、RARP都依赖帧传输数据，所以帧头部需要提供字段来区分.其它层为区分上层协议，也需要采用不同的标识手段：
 帧头部的类型字段&amp;mdash;&amp;gt; IP头部的协议字段&amp;mdash;&amp;gt; TCP/UDP的端口号.  IP协议 IPv4是指32位IP地址协议，目前快使用完了，另有IPv6协议.
 IP协议为上层协议提供无状态、无连接、不可靠的服务.需要上层协议自己实现数据确认、超时重传等机制达到可靠传输的目的.  1.1 因特网 具体构成描述  网络边缘上的不同端系统通过通信链路和分组交换机(由ISP提供)接入因特网。  通信链路由不同类型的物理媒体组成，包括有同轴电缆、铜线、光纤和无线电频谱，数据在链路中的传输速率以比特/秒(bit/s,或bps)来度量。 分组交换机主要有链路层交换机和路由器，前者通常用于接入网中，而路由器用于网络核心中。 端系统之间的数据传输以分组(packet)的形式进行，数据分段，每段加上首部字节便是一个分组。 IP协议定义了在路由器和端系统之间发送和接受的分组格式。    服务描述  分布式应用程序通过API与因特网基础设施连接，向目标端系统特定软件交付数据.  协议 因特网中的通信需要遵循协议，具体的，协议定义了在两个或多个通信实体之间交换的报文格式和次序，以及报文发送/接受或其它事件所采取的动作.
1.2 网络边缘 与互联网相连的端系统处在因特网的边缘，也被称为主机，有时进一步被分为客户和服务器。
接入网 处在因特网边缘的端系统通过物理链路与边缘路由器(端系统与远程端系统路径上的第一台路由器)相连，这些物理链路也被称为接入网。
  家庭接入：DSL、电缆、FTTH、拨号和卫星
宽带接入主要有两种类型：数字用户线(DSL)和电缆。
 基于电话线(双绞铜线)，用户的DSL调制解调器与本地ISP的数字用户线接入复用器(DSLAM)交换数据，数字信号-&amp;gt;DSL调制解调器-&amp;gt;高频音模拟信号-&amp;gt;DSLAM-&amp;gt;数字信号-&amp;gt;因特网传输。 家庭电话线采用频分复用技术，同时承载数据和电话信号，使得电话呼叫和因特网连接能够共享DSL链路。在家庭用户端，分频器将两种信号分隔开来，并将数据信号转发给DSL调制解调器；在ISP中，DSLAM将数据与电话信号分隔开，并将数据送往因特网。(数百个甚至上千个家庭与同一个DLSAM相连) 电缆因特网接入利用现有的有线电视基础设施。光纤将电缆头端(其中的电缆调制解调器短接系统，CMTS,类比DSLAM功能)连接到地区枢纽，从这里使用传统同轴电缆到达各家各户。由于该系统混用光纤和同轴电缆，也被称为混合光纤同轴(HFC)。电缆因特网接入的一个重要特征是共享广播媒体。  此外，光纤到户(FTTH)直接在ISP和家庭之间连接一条光纤路径.
  物理媒体：双绞铜线、同轴电缆、光纤、陆路无线电信道、卫星无线电信道</description>
    </item>
    
    <item>
      <title>GitLearn</title>
      <link>https://hxie13.github.io/public/posts/gitlearn/</link>
      <pubDate>Sun, 13 Feb 2022 13:30:44 +0800</pubDate>
      
      <guid>https://hxie13.github.io/public/posts/gitlearn/</guid>
      <description>记录Git本地及远程操作和同步命令的使用.</description>
    </item>
    
    <item>
      <title>分类目录</title>
      <link>https://hxie13.github.io/public/pages/about/</link>
      <pubDate>Mon, 10 Sep 2018 19:04:46 +0200</pubDate>
      
      <guid>https://hxie13.github.io/public/pages/about/</guid>
      <description>  Page   Content   Paper   </description>
    </item>
    
  </channel>
</rss>
